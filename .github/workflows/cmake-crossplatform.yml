name: CMake Cross-platform Build

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      c_compiler:
        required: true
        type: string
      cpp_compiler:
        required: true
        type: string
      build_type:
        required: true
        type: string
      retention_days:
        required: false
        type: number
        default: 5

jobs:
  build:
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install conan
        run: pip install conan

      - name: Configure conan
        run: |
          conan profile detect --force

      - name: Conan setup
        working-directory: ./conan
        run: conan install . -s build_type="${{inputs.build_type}}" --build=missing --output-folder=build/"${{inputs.build_type}}"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/conan/build/${{ inputs.build_type }}/conan_toolchain.cmake
          -DCMAKE_CXX_COMPILER=${{ inputs.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ inputs.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}
          -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ inputs.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest -V -VV --rerun-failed --output-on-failure --build-config ${{ inputs.build_type }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{inputs.os}}-${{inputs.build_type}}-${{inputs.c_compiler}}-${{ github.run_number }}
          path: ${{ steps.strings.outputs.build-output-dir }}
          retention-days: ${{ inputs.retention_days }}

      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: BuildLog-${{inputs.os}}-${{inputs.build_type}}-${{inputs.c_compiler}}-${{ github.run_number }}
          path: /Users/runner/work/AxonEngine/AxonEngine/build/Testing/Temporary/LastTest.log
          retention-days: 1
